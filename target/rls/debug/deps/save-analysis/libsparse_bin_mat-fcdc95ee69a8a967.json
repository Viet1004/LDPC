{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2","program":"/home/viet1004/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","sparse_bin_mat","--edition=2018","/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=fcdc95ee69a8a967","-C","extra-filename=-fcdc95ee69a8a967","--out-dir","/home/viet1004/Documents/rust-project/LDPC/target/rls/debug/deps","-L","dependency=/home/viet1004/Documents/rust-project/LDPC/target/rls/debug/deps","--extern","is_sorted=/home/viet1004/Documents/rust-project/LDPC/target/rls/debug/deps/libis_sorted-8ee499791340ff4c.rmeta","--extern","itertools=/home/viet1004/Documents/rust-project/LDPC/target/rls/debug/deps/libitertools-0dd26fc35d62d4e1.rmeta","--extern","serde=/home/viet1004/Documents/rust-project/LDPC/target/rls/debug/deps/libserde-5e0466a5ac1608e4.rmeta","--extern","serde_json=/home/viet1004/Documents/rust-project/LDPC/target/rls/debug/deps/libserde_json-0895eb5a0ecbdb48.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/viet1004/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/viet1004/Documents/rust-project/LDPC/target/rls/debug/deps/libsparse_bin_mat-fcdc95ee69a8a967.rmeta"},"prelude":{"crate_id":{"name":"sparse_bin_mat","disambiguator":[2849238572142782650,11585374558481197211]},"crate_root":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src","external_crates":[{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17255007459673538994,10308005785557406899]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1111923456158047016,16902919259693091653]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4206559302939301148,6164973543688958239]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5256837966271238037,14624209252821231605]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7550531950105187004,8150571798412653191]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15335445469838442753,9552689356239597613]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16502730494113453331,739642837530493346]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17056567370692029606,5237526203530126554]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14937216707889756020,8824175777475717960]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17577480307990758245,11665649631686256755]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10532265776820743552,12261914965731844528]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[15918998743166050901,5153345746580364318]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[13847123446638245357,191099483651108540]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[8535951946701118478,247082403716274271]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8071155208203251459,9749237191716311885]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[10993643928529734294,4550819794165110057]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[3520407426629514955,6784388313453073637]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[947612539730288161,7851933247975044788]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","num":19,"id":{"name":"is_sorted","disambiguator":[10783676067867099237,5828265237592850832]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","num":20,"id":{"name":"itertools","disambiguator":[15453165564885189177,15214918731916065742]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","num":21,"id":{"name":"either","disambiguator":[17324749041942919745,17631015617105789982]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","num":22,"id":{"name":"serde","disambiguator":[13109242471492608089,452597619827986489]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","num":23,"id":{"name":"serde_derive","disambiguator":[8635578226390175488,9019234005610694067]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","num":24,"id":{"name":"serde_json","disambiguator":[7271905730918139303,12632272216290900579]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","num":25,"id":{"name":"itoa","disambiguator":[1768660832640281218,13818066294710542729]}},{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","num":26,"id":{"name":"ryu","disambiguator":[16262055849951961804,144775038649996040]}}],"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":0,"byte_end":2509,"line_start":1,"line_end":70,"column_start":1,"column_end":87}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":574},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2369,"byte_end":2387,"line_start":67,"line_end":67,"column_start":18,"column_end":36},"alias_span":null,"name":"NonTrivialElements","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2389,"byte_end":2393,"line_start":67,"line_end":67,"column_start":38,"column_end":42},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":629},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2395,"byte_end":2407,"line_start":67,"line_end":67,"column_start":44,"column_end":56},"alias_span":null,"name":"SparseBinMat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":725},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2440,"byte_end":2459,"line_start":70,"line_end":70,"column_start":18,"column_end":37},"alias_span":null,"name":"NonTrivialPositions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":435},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2461,"byte_end":2475,"line_start":70,"line_end":70,"column_start":39,"column_end":53},"alias_span":null,"name":"SparseBinSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":434},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2477,"byte_end":2489,"line_start":70,"line_end":70,"column_start":55,"column_end":67},"alias_span":null,"name":"SparseBinVec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":647},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2491,"byte_end":2507,"line_start":70,"line_end":70,"column_start":69,"column_end":85},"alias_span":null,"name":"SparseBinVecBase","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":0,"byte_end":2509,"line_start":1,"line_end":70,"column_start":1,"column_end":87},"name":"","qualname":"::","value":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":27},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502}],"decl_id":null,"docs":" A sparse implementation of a binary matrix optimized for row operations.","sig":null,"attributes":[{"value":"/ A sparse implementation of a binary matrix optimized for row operations.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":77,"byte_end":80,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The main objects of this crate are [`matrices`](crate::SparseBinMat) and [`vectors`](crate::SparseBinVecBase).","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":81,"byte_end":195,"line_start":3,"line_end":3,"column_start":1,"column_end":115}},{"value":"/ All elements in a binary matrix or vector are element of the binary field GF2.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":196,"byte_end":278,"line_start":4,"line_end":4,"column_start":1,"column_end":83}},{"value":"/ That is, they are either 0 or 1 and addition is modulo 2.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":279,"byte_end":340,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":341,"byte_end":344,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Quick start","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":345,"byte_end":362,"line_start":7,"line_end":7,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":363,"byte_end":366,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ To instanciate a matrix, you need to specify the number of columns as well","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":367,"byte_end":445,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ as the position of 1 in each rows.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":446,"byte_end":484,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":485,"byte_end":488,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":489,"byte_end":496,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":497,"byte_end":534,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":535,"byte_end":538,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // This is the matrix","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":539,"byte_end":564,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/ // 1 0 1 0 1","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":565,"byte_end":581,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/ // 0 1 0 1 0","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":582,"byte_end":598,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/ // 0 0 1 0 0","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":599,"byte_end":615,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/ let matrix = SparseBinMat::new(5, vec![vec![0, 2, 4], vec![1, 3], vec![2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":616,"byte_end":696,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":697,"byte_end":704,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":705,"byte_end":708,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ It is easy to access elements or rows of a matrix. However,","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":709,"byte_end":772,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ since the matrix are optimized for row operations, you need","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":773,"byte_end":836,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ to transpose the matrix if you want to perform column operations.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":837,"byte_end":906,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":907,"byte_end":910,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":911,"byte_end":918,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":919,"byte_end":958,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ let matrix = SparseBinMat::new(5, vec![vec![0, 2, 4], vec![1, 3], vec![2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":959,"byte_end":1039,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(matrix.row(1).unwrap().as_slice(), [1, 3].as_ref());","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1040,"byte_end":1107,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(matrix.get(0, 0), Some(1));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1108,"byte_end":1150,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(matrix.get(0, 1), Some(0));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1151,"byte_end":1193,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/ // The element (0, 7) is out of bound for a 3 x 5 matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1194,"byte_end":1255,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(matrix.get(0, 7), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1256,"byte_end":1295,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1296,"byte_end":1303,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1304,"byte_end":1307,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Addition and multiplication are implemented between matrix references.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1308,"byte_end":1382,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1383,"byte_end":1386,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1387,"byte_end":1394,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1395,"byte_end":1434,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ let matrix = SparseBinMat::new(3, vec![vec![0, 1], vec![1, 2], vec![0, 2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1435,"byte_end":1515,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ let identity = SparseBinMat::identity(3);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1516,"byte_end":1561,"line_start":41,"line_end":41,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1562,"byte_end":1565,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let sum = SparseBinMat::new(3, vec![vec![1], vec![2], vec![0]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1566,"byte_end":1634,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(&matrix + &identity, sum);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1635,"byte_end":1676,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1677,"byte_end":1680,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&matrix * &identity, matrix);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1681,"byte_end":1725,"line_start":46,"line_end":46,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1726,"byte_end":1733,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1734,"byte_end":1737,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Many useful operations and decompositions are implemented.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1738,"byte_end":1800,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ These include, but are not limited to","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1801,"byte_end":1842,"line_start":50,"line_end":50,"column_start":1,"column_end":42}},{"value":"/ - [`rank`](SparseBinMat::rank),","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1843,"byte_end":1878,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ - [`echelon form`](SparseBinMat::echelon_form),","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1879,"byte_end":1930,"line_start":52,"line_end":52,"column_start":1,"column_end":52}},{"value":"/ - [`nullspace`](SparseBinMat::nullspace),","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1931,"byte_end":1976,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/ - [`tranposition`](SparseBinMat::transposed),","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":1977,"byte_end":2026,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/ - [`horizontal`](SparseBinMat::horizontal_concat_with) and","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2027,"byte_end":2089,"line_start":55,"line_end":55,"column_start":1,"column_end":63}},{"value":"/ [`vertical`](SparseBinMat::vertical_concat_with) concatenations,","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2090,"byte_end":2158,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ - and more ...","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2159,"byte_end":2177,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2178,"byte_end":2181,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Operations are implemented as I need them,","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2182,"byte_end":2228,"line_start":59,"line_end":59,"column_start":1,"column_end":47}},{"value":"/ feel welcome to raise an issue if you need a new functionnality.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2229,"byte_end":2297,"line_start":60,"line_end":60,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":505},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":526},{"krate":0,"index":531},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":550},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":573}],"decl_id":null,"docs":" Error types for matrix and vector operations.","sig":null,"attributes":[{"value":"/ Error types for matrix and vector operations.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":2511,"byte_end":2560,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":2561,"byte_end":2564,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This contains two kind of errors.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":2565,"byte_end":2602,"line_start":3,"line_end":3,"column_start":1,"column_end":38}},{"value":"/ [`InvalidPositions`](InvalidPositions) represents errors","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":2603,"byte_end":2663,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/ when building a vector or matrix with invalid positions.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":2664,"byte_end":2724,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ [`IncompatibleDimensions`](IncompatibleDimensions) represents errors","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":2725,"byte_end":2797,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ when two objects have incompatible dimensions for a given operations","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":2798,"byte_end":2870,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ such as addition or multiplication.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":2871,"byte_end":2910,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":506},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":3128,"byte_end":3136,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"Unsorted","qualname":"::error::InvalidPositions::Unsorted","value":"InvalidPositions::Unsorted","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":508},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":3142,"byte_end":3152,"line_start":18,"line_end":18,"column_start":5,"column_end":15},"name":"OutOfBound","qualname":"::error::InvalidPositions::OutOfBound","value":"InvalidPositions::OutOfBound","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":510},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":3158,"byte_end":3168,"line_start":19,"line_end":19,"column_start":5,"column_end":15},"name":"Duplicated","qualname":"::error::InvalidPositions::Duplicated","value":"InvalidPositions::Duplicated","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":505},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":3105,"byte_end":3121,"line_start":16,"line_end":16,"column_start":10,"column_end":26},"name":"InvalidPositions","qualname":"::error::InvalidPositions","value":"pub enum InvalidPositions { Unsorted, OutOfBound, Duplicated, }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510}],"decl_id":null,"docs":" An error to represent invalid positions in a vector or matrix.\n","sig":null,"attributes":[{"value":"/ An error to represent invalid positions in a vector or matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":2978,"byte_end":3044,"line_start":14,"line_end":14,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":4281,"byte_end":4303,"line_start":55,"line_end":55,"column_start":12,"column_end":34},"name":"IncompatibleDimensions","qualname":"::error::IncompatibleDimensions","value":"IncompatibleDimensions {  }","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"decl_id":null,"docs":" An error to represent incompatible dimensions\n in matrix and vector operations.\n","sig":null,"attributes":[{"value":"/ An error to represent incompatible dimensions","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":4132,"byte_end":4181,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/ in matrix and vector operations.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":4182,"byte_end":4218,"line_start":53,"line_end":53,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":4425,"byte_end":4428,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<IncompatibleDimensions<DL, DR>>::new","value":"pub fn new(DL, DR) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":4584,"byte_end":4612,"line_start":69,"line_end":69,"column_start":10,"column_end":38},"name":"VecVecIncompatibleDimensions","qualname":"::error::VecVecIncompatibleDimensions","value":"IncompatibleDimensions<usize, usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":4662,"byte_end":4690,"line_start":70,"line_end":70,"column_start":10,"column_end":38},"name":"MatVecIncompatibleDimensions","qualname":"::error::MatVecIncompatibleDimensions","value":"IncompatibleDimensions<(usize, usize), usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":4749,"byte_end":4777,"line_start":71,"line_end":71,"column_start":10,"column_end":38},"name":"VecMatIncompatibleDimensions","qualname":"::error::VecMatIncompatibleDimensions","value":"IncompatibleDimensions<usize, (usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":4836,"byte_end":4864,"line_start":72,"line_end":72,"column_start":10,"column_end":38},"name":"MatMatIncompatibleDimensions","qualname":"::error::MatMatIncompatibleDimensions","value":"IncompatibleDimensions<(usize, usize), (usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":574},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/non_trivial_elements.rs","byte_start":47702,"byte_end":47720,"line_start":7,"line_end":7,"column_start":12,"column_end":30},"name":"NonTrivialElements","qualname":"::matrix::non_trivial_elements::NonTrivialElements","value":"NonTrivialElements {  }","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"decl_id":null,"docs":" An iterator over the coordinates of non trivial elements.","sig":null,"attributes":[{"value":"/ An iterator over the coordinates of non trivial elements.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/non_trivial_elements.rs","byte_start":47520,"byte_end":47581,"line_start":3,"line_end":3,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/non_trivial_elements.rs","byte_start":47582,"byte_end":47585,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See the [`non_trivial_elements`](SparseBinMat::non_trivial_elements) method.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/non_trivial_elements.rs","byte_start":47586,"byte_end":47666,"line_start":5,"line_end":5,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/rows.rs","byte_start":53741,"byte_end":53745,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Rows","qualname":"::matrix::rows::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"decl_id":null,"docs":" An iterator over the rows of matrix.","sig":null,"attributes":[{"value":"/ An iterator over the rows of matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/rows.rs","byte_start":53601,"byte_end":53641,"line_start":4,"line_end":4,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/rows.rs","byte_start":53642,"byte_end":53645,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See the [`rows`](SparseBinMat::rows) method.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/rows.rs","byte_start":53646,"byte_end":53694,"line_start":6,"line_end":6,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":629},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6490,"byte_end":6502,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"SparseBinMat","qualname":"::matrix::SparseBinMat","value":"SparseBinMat {  }","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"decl_id":null,"docs":" A sparse binary matrix optimized for row operations.\n","sig":null,"attributes":[{"value":"/ A sparse binary matrix optimized for row operations.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6377,"byte_end":6433,"line_start":37,"line_end":37,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7354,"byte_end":7357,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<SparseBinMat>::new","value":"pub fn new(usize, Vec<Vec<usize>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given number of columns\n and list of rows .","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given number of columns","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6622,"byte_end":6679,"line_start":46,"line_end":46,"column_start":5,"column_end":62}},{"value":"/ and list of rows .","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6684,"byte_end":6706,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6711,"byte_end":6714,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ A row is a list of the positions where the elements have value 1.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6719,"byte_end":6788,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ All rows are sorted during insertion.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6793,"byte_end":6834,"line_start":50,"line_end":50,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6839,"byte_end":6842,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6847,"byte_end":6860,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6865,"byte_end":6868,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6873,"byte_end":6880,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6885,"byte_end":6924,"line_start":55,"line_end":55,"column_start":5,"column_end":44}},{"value":"/ let matrix = SparseBinMat::new(4, vec![vec![0, 1, 2], vec![0, 2, 3]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6929,"byte_end":7003,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7008,"byte_end":7011,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.number_of_rows(), 2);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7016,"byte_end":7059,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(matrix.number_of_columns(), 4);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7064,"byte_end":7110,"line_start":59,"line_end":59,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(matrix.number_of_elements(), 8);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7115,"byte_end":7162,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7167,"byte_end":7174,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7179,"byte_end":7182,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7187,"byte_end":7198,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7203,"byte_end":7206,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Panics if a position in a row is greater or equal the number of columns,","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7211,"byte_end":7287,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/ a row is unsorted or a row contains duplicate.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7292,"byte_end":7342,"line_start":66,"line_end":66,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8185,"byte_end":8192,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SparseBinMat>::try_new","value":"pub fn try_new(usize, Vec<Vec<usize>>) -> Result<Self, InvalidPositions>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given number of columns\n and list of rows or returns an error if a position in a\n row is greater or equal the number of columns, a row is unsorted\n or a row contains duplicate.","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given number of columns","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7484,"byte_end":7541,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/ and list of rows or returns an error if a position in a","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7546,"byte_end":7605,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/ row is greater or equal the number of columns, a row is unsorted","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7610,"byte_end":7678,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ or a row contains duplicate.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7683,"byte_end":7715,"line_start":74,"line_end":74,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7720,"byte_end":7723,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ A row is a list of the positions where the elements have value 1.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7728,"byte_end":7797,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ All rows are sorted during insertion.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7802,"byte_end":7843,"line_start":77,"line_end":77,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7848,"byte_end":7851,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7856,"byte_end":7869,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7874,"byte_end":7877,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7882,"byte_end":7889,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7894,"byte_end":7933,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/ let first_matrix = SparseBinMat::try_new(4, vec![vec![0, 1, 2], vec![0, 2, 3]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":7938,"byte_end":8022,"line_start":83,"line_end":83,"column_start":5,"column_end":89}},{"value":"/ let second_matrix = SparseBinMat::new(4, vec![vec![0, 1, 2], vec![0, 2, 3]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8027,"byte_end":8108,"line_start":84,"line_end":84,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(first_matrix, Ok(second_matrix));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8113,"byte_end":8161,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8166,"byte_end":8173,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9201,"byte_end":9209,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"identity","qualname":"<SparseBinMat>::identity","value":"pub fn identity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an identity matrix of the given length.","sig":null,"attributes":[{"value":"/ Creates an identity matrix of the given length.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8797,"byte_end":8848,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8853,"byte_end":8856,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8861,"byte_end":8874,"line_start":109,"line_end":109,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8879,"byte_end":8882,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8887,"byte_end":8894,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8899,"byte_end":8938,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/ let matrix = SparseBinMat::identity(5);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8943,"byte_end":8986,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8991,"byte_end":8994,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let identity_rows = (0..5).map(|x| vec![x]).collect();","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":8999,"byte_end":9057,"line_start":115,"line_end":115,"column_start":5,"column_end":63}},{"value":"/ let identity_matrix = SparseBinMat::new(5, identity_rows);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9062,"byte_end":9124,"line_start":116,"line_end":116,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9129,"byte_end":9132,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix, identity_matrix);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9137,"byte_end":9177,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9182,"byte_end":9189,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9839,"byte_end":9844,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"zeros","qualname":"<SparseBinMat>::zeros","value":"pub fn zeros(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix fill with zeros of the given dimensions.","sig":null,"attributes":[{"value":"/ Creates a matrix fill with zeros of the given dimensions.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9412,"byte_end":9473,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9478,"byte_end":9481,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9486,"byte_end":9499,"line_start":130,"line_end":130,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9504,"byte_end":9507,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9512,"byte_end":9519,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9524,"byte_end":9563,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/ let matrix = SparseBinMat::zeros(2, 3);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9568,"byte_end":9611,"line_start":134,"line_end":134,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9616,"byte_end":9619,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.number_of_rows(), 2);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9624,"byte_end":9667,"line_start":136,"line_end":136,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(matrix.number_of_columns(), 3);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9672,"byte_end":9718,"line_start":137,"line_end":137,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(matrix.number_of_zeros(), 6);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9723,"byte_end":9767,"line_start":138,"line_end":138,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(matrix.number_of_ones(), 0);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9772,"byte_end":9815,"line_start":139,"line_end":139,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9820,"byte_end":9827,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10695,"byte_end":10700,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"empty","qualname":"<SparseBinMat>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty matrix.","sig":null,"attributes":[{"value":"/ Creates an empty matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":9996,"byte_end":10024,"line_start":145,"line_end":145,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10029,"byte_end":10032,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This allocate minimally, so it is a good placeholder.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10037,"byte_end":10094,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10099,"byte_end":10102,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10107,"byte_end":10120,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10125,"byte_end":10128,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10133,"byte_end":10140,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10145,"byte_end":10184,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/ let matrix = SparseBinMat::empty();","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10189,"byte_end":10228,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10233,"byte_end":10236,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.number_of_rows(), 0);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10241,"byte_end":10284,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(matrix.number_of_columns(), 0); assert_eq!(matrix.number_of_elements(), 0);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10289,"byte_end":10379,"line_start":156,"line_end":156,"column_start":5,"column_end":95}},{"value":"/ // Note that these are not equal since new preallocate some space","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10384,"byte_end":10453,"line_start":157,"line_end":157,"column_start":5,"column_end":74}},{"value":"/ // to store the data.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10458,"byte_end":10483,"line_start":158,"line_end":158,"column_start":5,"column_end":30}},{"value":"/ assert_ne!(SparseBinMat::new(0, Vec::new()), SparseBinMat::empty());","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10488,"byte_end":10560,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10565,"byte_end":10568,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // To test for emptyness, you should prefer the following.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10573,"byte_end":10635,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"/ assert!(matrix.is_empty());","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10640,"byte_end":10671,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10676,"byte_end":10683,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10919,"byte_end":10936,"line_start":173,"line_end":173,"column_start":12,"column_end":29},"name":"number_of_columns","qualname":"<SparseBinMat>::number_of_columns","value":"pub fn number_of_columns(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of columns in the matrix.\n","sig":null,"attributes":[{"value":"/ Returns the number of columns in the matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10859,"byte_end":10907,"line_start":172,"line_end":172,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11053,"byte_end":11067,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"number_of_rows","qualname":"<SparseBinMat>::number_of_rows","value":"pub fn number_of_rows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of rows in the matrix\n","sig":null,"attributes":[{"value":"/ Returns the number of rows in the matrix","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":10997,"byte_end":11041,"line_start":177,"line_end":177,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11258,"byte_end":11267,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"dimension","qualname":"<SparseBinMat>::dimension","value":"pub fn dimension(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of rows and columns in the matrix.\n","sig":null,"attributes":[{"value":"/ Returns the number of rows and columns in the matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11189,"byte_end":11246,"line_start":185,"line_end":185,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11425,"byte_end":11443,"line_start":191,"line_end":191,"column_start":12,"column_end":30},"name":"number_of_elements","qualname":"<SparseBinMat>::number_of_elements","value":"pub fn number_of_elements(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the matrix.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11364,"byte_end":11413,"line_start":190,"line_end":190,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11604,"byte_end":11619,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"number_of_zeros","qualname":"<SparseBinMat>::number_of_zeros","value":"pub fn number_of_zeros(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements with value 0 in the matrix.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements with value 0 in the matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11530,"byte_end":11592,"line_start":195,"line_end":195,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11781,"byte_end":11795,"line_start":201,"line_end":201,"column_start":12,"column_end":26},"name":"number_of_ones","qualname":"<SparseBinMat>::number_of_ones","value":"pub fn number_of_ones(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements with value 1 in the matrix.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements with value 1 in the matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11707,"byte_end":11769,"line_start":200,"line_end":200,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11933,"byte_end":11941,"line_start":206,"line_end":206,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SparseBinMat>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the number of elements in the matrix is 0.\n","sig":null,"attributes":[{"value":"/ Returns true if the number of elements in the matrix is 0.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":11859,"byte_end":11921,"line_start":205,"line_end":205,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12078,"byte_end":12085,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<SparseBinMat>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the all elements of the matrix are 0.\n","sig":null,"attributes":[{"value":"/ Returns true if the all elements of the matrix are 0.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12009,"byte_end":12066,"line_start":210,"line_end":210,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12609,"byte_end":12612,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"get","qualname":"<SparseBinMat>::get","value":"pub fn get(&Self, usize, usize) -> Option<BinaryNumber>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value at the given row and column\n or None if one of the index is out of bound.","sig":null,"attributes":[{"value":"/ Returns the value at the given row and column","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12149,"byte_end":12198,"line_start":215,"line_end":215,"column_start":5,"column_end":54}},{"value":"/ or None if one of the index is out of bound.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12203,"byte_end":12251,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12256,"byte_end":12259,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12264,"byte_end":12277,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12282,"byte_end":12285,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12290,"byte_end":12297,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12302,"byte_end":12341,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/ let rows = vec![vec![0, 1], vec![1, 2]];","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12346,"byte_end":12390,"line_start":222,"line_end":222,"column_start":5,"column_end":49}},{"value":"/ let matrix = SparseBinMat::new(3, rows);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12395,"byte_end":12439,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12444,"byte_end":12447,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.get(0, 0), Some(1));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12452,"byte_end":12494,"line_start":225,"line_end":225,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(matrix.get(1, 0), Some(0));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12499,"byte_end":12541,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(matrix.get(2, 0), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12546,"byte_end":12585,"line_start":227,"line_end":227,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12590,"byte_end":12597,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13334,"byte_end":13344,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"is_zero_at","qualname":"<SparseBinMat>::is_zero_at","value":"pub fn is_zero_at(&Self, usize, usize) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value at the given row and column is 0\n or None if one of the index is out of bound.","sig":null,"attributes":[{"value":"/ Returns true if the value at the given row and column is 0","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12833,"byte_end":12895,"line_start":237,"line_end":237,"column_start":5,"column_end":67}},{"value":"/ or None if one of the index is out of bound.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12900,"byte_end":12948,"line_start":238,"line_end":238,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12953,"byte_end":12956,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12961,"byte_end":12974,"line_start":240,"line_end":240,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12979,"byte_end":12982,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12987,"byte_end":12994,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":12999,"byte_end":13038,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/ let rows = vec![vec![0, 1], vec![1, 2]];","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13043,"byte_end":13087,"line_start":244,"line_end":244,"column_start":5,"column_end":49}},{"value":"/ let matrix = SparseBinMat::new(3, rows);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13092,"byte_end":13136,"line_start":245,"line_end":245,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13141,"byte_end":13144,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.is_zero_at(0, 0), Some(false));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13149,"byte_end":13202,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(matrix.is_zero_at(1, 0), Some(true));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13207,"byte_end":13259,"line_start":248,"line_end":248,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(matrix.is_zero_at(2, 0), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13264,"byte_end":13310,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13315,"byte_end":13322,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13960,"byte_end":13969,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"is_one_at","qualname":"<SparseBinMat>::is_one_at","value":"pub fn is_one_at(&Self, usize, usize) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value at the given row and column is 1\n or None if one of the index is out of bound.","sig":null,"attributes":[{"value":"/ Returns true if the value at the given row and column is 1","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13462,"byte_end":13524,"line_start":255,"line_end":255,"column_start":5,"column_end":67}},{"value":"/ or None if one of the index is out of bound.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13529,"byte_end":13577,"line_start":256,"line_end":256,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13582,"byte_end":13585,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13590,"byte_end":13603,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13608,"byte_end":13611,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13616,"byte_end":13623,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13628,"byte_end":13667,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ let rows = vec![vec![0, 1], vec![1, 2]];","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13672,"byte_end":13716,"line_start":262,"line_end":262,"column_start":5,"column_end":49}},{"value":"/ let matrix = SparseBinMat::new(3, rows);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13721,"byte_end":13765,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13770,"byte_end":13773,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.is_one_at(0, 0), Some(true));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13778,"byte_end":13829,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(matrix.is_one_at(1, 0), Some(false));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13834,"byte_end":13886,"line_start":266,"line_end":266,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(matrix.is_one_at(2, 0), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13891,"byte_end":13936,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":13941,"byte_end":13948,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14628,"byte_end":14631,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"row","qualname":"<SparseBinMat>::row","value":"pub fn row(&Self, usize) -> Option<SparseBinSlice>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the given row of the matrix\n or None if the row index is out of bound.","sig":null,"attributes":[{"value":"/ Returns a reference to the given row of the matrix","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14087,"byte_end":14141,"line_start":273,"line_end":273,"column_start":5,"column_end":59}},{"value":"/ or None if the row index is out of bound.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14146,"byte_end":14191,"line_start":274,"line_end":274,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14196,"byte_end":14199,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14204,"byte_end":14217,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14222,"byte_end":14225,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14230,"byte_end":14237,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::{SparseBinSlice, SparseBinMat};","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14242,"byte_end":14299,"line_start":279,"line_end":279,"column_start":5,"column_end":62}},{"value":"/ let rows = vec![vec![0, 1], vec![1, 2]];","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14304,"byte_end":14348,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ let matrix = SparseBinMat::new(3, rows.clone());","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14353,"byte_end":14405,"line_start":281,"line_end":281,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14410,"byte_end":14413,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.row(0), Some(SparseBinSlice::new(3, &rows[0])));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14418,"byte_end":14488,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(matrix.row(1), Some(SparseBinSlice::new(3, &rows[1])));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14493,"byte_end":14563,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(matrix.row(2), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14568,"byte_end":14604,"line_start":285,"line_end":285,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14609,"byte_end":14616,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15748,"byte_end":15752,"line_start":317,"line_end":317,"column_start":12,"column_end":16},"name":"rows","qualname":"<SparseBinMat>::rows","value":"pub fn rows(&Self) -> Rows","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding the rows of the matrix\n as slice of non zero positions.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding the rows of the matrix","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":14994,"byte_end":15049,"line_start":299,"line_end":299,"column_start":5,"column_end":60}},{"value":"/ as slice of non zero positions.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15054,"byte_end":15089,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15094,"byte_end":15097,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15102,"byte_end":15115,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15120,"byte_end":15123,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15128,"byte_end":15135,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::{SparseBinSlice, SparseBinMat};","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15140,"byte_end":15197,"line_start":305,"line_end":305,"column_start":5,"column_end":62}},{"value":"/ let rows = vec![vec![0, 1, 2, 5], vec![1, 3, 4], vec![2, 4, 5], vec![0, 5]];","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15202,"byte_end":15282,"line_start":306,"line_end":306,"column_start":5,"column_end":85}},{"value":"/ let matrix = SparseBinMat::new(7, rows.clone());","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15287,"byte_end":15339,"line_start":307,"line_end":307,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15344,"byte_end":15347,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut iter = matrix.rows();","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15352,"byte_end":15385,"line_start":309,"line_end":309,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15390,"byte_end":15393,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(SparseBinSlice::new(7, &rows[0])));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15398,"byte_end":15466,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some(SparseBinSlice::new(7, &rows[1])));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15471,"byte_end":15539,"line_start":312,"line_end":312,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some(SparseBinSlice::new(7, &rows[2])));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15544,"byte_end":15612,"line_start":313,"line_end":313,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some(SparseBinSlice::new(7, &rows[3])));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15617,"byte_end":15685,"line_start":314,"line_end":314,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15690,"byte_end":15724,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15729,"byte_end":15736,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16528,"byte_end":16548,"line_start":341,"line_end":341,"column_start":12,"column_end":32},"name":"non_trivial_elements","qualname":"<SparseBinMat>::non_trivial_elements","value":"pub fn non_trivial_elements(&Self) -> NonTrivialElements","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding the positions of the non\n trivial elements.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding the positions of the non","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15806,"byte_end":15863,"line_start":321,"line_end":321,"column_start":5,"column_end":62}},{"value":"/ trivial elements.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15868,"byte_end":15889,"line_start":322,"line_end":322,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15894,"byte_end":15897,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15902,"byte_end":15915,"line_start":324,"line_end":324,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15920,"byte_end":15923,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15928,"byte_end":15935,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::{SparseBinSlice, SparseBinMat};","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":15940,"byte_end":15997,"line_start":327,"line_end":327,"column_start":5,"column_end":62}},{"value":"/ let rows = vec![vec![0, 2], vec![1], vec![0, 2], vec![1]];","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16002,"byte_end":16064,"line_start":328,"line_end":328,"column_start":5,"column_end":67}},{"value":"/ let matrix = SparseBinMat::new(3, rows);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16069,"byte_end":16113,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16118,"byte_end":16121,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let mut iter = matrix.non_trivial_elements();","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16126,"byte_end":16175,"line_start":331,"line_end":331,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16180,"byte_end":16183,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some((0, 0)));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16188,"byte_end":16230,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(iter.next(), Some((0, 2)));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16235,"byte_end":16277,"line_start":334,"line_end":334,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(iter.next(), Some((1, 1)));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16282,"byte_end":16324,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(iter.next(), Some((2, 0)));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16329,"byte_end":16371,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(iter.next(), Some((2, 2)));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16376,"byte_end":16418,"line_start":337,"line_end":337,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(iter.next(), Some((3, 1)));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16423,"byte_end":16465,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16470,"byte_end":16504,"line_start":339,"line_end":339,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16509,"byte_end":16516,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17068,"byte_end":17079,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"row_weights","qualname":"<SparseBinMat>::row_weights","value":"pub fn row_weights<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding the number\n of non zero elements in each row of the matrix.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding the number","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16629,"byte_end":16672,"line_start":345,"line_end":345,"column_start":5,"column_end":48}},{"value":"/ of non zero elements in each row of the matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16677,"byte_end":16728,"line_start":346,"line_end":346,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16733,"byte_end":16736,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16741,"byte_end":16754,"line_start":348,"line_end":348,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16759,"byte_end":16762,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16767,"byte_end":16774,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16779,"byte_end":16818,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/ let rows = vec![vec![0, 1, 2, 5], vec![1, 3, 4], vec![2, 4, 5], vec![0, 5]];","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16823,"byte_end":16903,"line_start":352,"line_end":352,"column_start":5,"column_end":85}},{"value":"/ let matrix = SparseBinMat::new(7, rows);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16908,"byte_end":16952,"line_start":353,"line_end":353,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16957,"byte_end":16960,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.row_weights().collect::<Vec<usize>>(), vec![4, 3, 3, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":16965,"byte_end":17044,"line_start":355,"line_end":355,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17049,"byte_end":17056,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17799,"byte_end":17809,"line_start":379,"line_end":379,"column_start":12,"column_end":22},"name":"transposed","qualname":"<SparseBinMat>::transposed","value":"pub fn transposed(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Gets the transposed version of the matrix\n by swapping the columns with the rows.","sig":null,"attributes":[{"value":"/ Gets the transposed version of the matrix","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17187,"byte_end":17232,"line_start":361,"line_end":361,"column_start":5,"column_end":50}},{"value":"/ by swapping the columns with the rows.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17237,"byte_end":17279,"line_start":362,"line_end":362,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17284,"byte_end":17287,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17292,"byte_end":17305,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17310,"byte_end":17313,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17318,"byte_end":17325,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17330,"byte_end":17369,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17374,"byte_end":17377,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let rows = vec![vec![0, 1, 2], vec![1, 3], vec![0, 2, 3]];","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17382,"byte_end":17444,"line_start":369,"line_end":369,"column_start":5,"column_end":67}},{"value":"/ let matrix = SparseBinMat::new(4, rows);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17449,"byte_end":17493,"line_start":370,"line_end":370,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17498,"byte_end":17501,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let transposed_matrix = matrix.transposed();","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17506,"byte_end":17554,"line_start":372,"line_end":372,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17559,"byte_end":17562,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let expected_rows = vec![vec![0, 2], vec![0, 1], vec![0, 2], vec![1, 2]];","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17567,"byte_end":17644,"line_start":374,"line_end":374,"column_start":5,"column_end":82}},{"value":"/ let expected_matrix = SparseBinMat::new(3, expected_rows);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17649,"byte_end":17711,"line_start":375,"line_end":375,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17716,"byte_end":17719,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(transposed_matrix, expected_matrix);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17724,"byte_end":17775,"line_start":377,"line_end":377,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17780,"byte_end":17787,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18245,"byte_end":18249,"line_start":396,"line_end":396,"column_start":12,"column_end":16},"name":"rank","qualname":"<SparseBinMat>::rank","value":"pub fn rank(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of the matrix.\n That is, the number of linearly independent rows or columns.","sig":null,"attributes":[{"value":"/ Computes the rank of the matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17862,"byte_end":17898,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"/ That is, the number of linearly independent rows or columns.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17903,"byte_end":17967,"line_start":384,"line_end":384,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17972,"byte_end":17975,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17980,"byte_end":17993,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":17998,"byte_end":18001,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18006,"byte_end":18013,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18018,"byte_end":18057,"line_start":389,"line_end":389,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18062,"byte_end":18065,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let rows = vec![vec![0, 1], vec![1, 2], vec![0, 2]];","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18070,"byte_end":18126,"line_start":391,"line_end":391,"column_start":5,"column_end":61}},{"value":"/ let matrix = SparseBinMat::new(3, rows);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18131,"byte_end":18175,"line_start":392,"line_end":392,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18180,"byte_end":18183,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.rank(), 2);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18188,"byte_end":18221,"line_start":394,"line_end":394,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18226,"byte_end":18233,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18917,"byte_end":18929,"line_start":415,"line_end":415,"column_start":12,"column_end":24},"name":"echelon_form","qualname":"<SparseBinMat>::echelon_form","value":"pub fn echelon_form(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an echeloned version of the matrix.","sig":null,"attributes":[{"value":"/ Returns an echeloned version of the matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18317,"byte_end":18364,"line_start":400,"line_end":400,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18369,"byte_end":18372,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ A matrix in echelon form as the property that no","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18377,"byte_end":18429,"line_start":402,"line_end":402,"column_start":5,"column_end":57}},{"value":"/ rows any given row have a 1 in the first non trivial","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18434,"byte_end":18490,"line_start":403,"line_end":403,"column_start":5,"column_end":61}},{"value":"/ position of that row. Also, all rows are linearly","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18495,"byte_end":18548,"line_start":404,"line_end":404,"column_start":5,"column_end":58}},{"value":"/ independent.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18553,"byte_end":18569,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18574,"byte_end":18577,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18582,"byte_end":18595,"line_start":407,"line_end":407,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18600,"byte_end":18603,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18608,"byte_end":18615,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18620,"byte_end":18659,"line_start":410,"line_end":410,"column_start":5,"column_end":44}},{"value":"/ let matrix = SparseBinMat::new(3, vec![vec![0, 1, 2], vec![0], vec![1, 2], vec![0, 2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18664,"byte_end":18756,"line_start":411,"line_end":411,"column_start":5,"column_end":97}},{"value":"/ let expected = SparseBinMat::new(3, vec![vec![0, 1, 2], vec![1], vec![2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18761,"byte_end":18840,"line_start":412,"line_end":412,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(matrix.echelon_form(), expected);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18845,"byte_end":18893,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":18898,"byte_end":18905,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19849,"byte_end":19858,"line_start":442,"line_end":442,"column_start":12,"column_end":21},"name":"nullspace","qualname":"<SparseBinMat>::nullspace","value":"pub fn nullspace(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix for which the rows are the generators\n of the nullspace of the original matrix.","sig":null,"attributes":[{"value":"/ Returns a matrix for which the rows are the generators","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19004,"byte_end":19062,"line_start":419,"line_end":419,"column_start":5,"column_end":63}},{"value":"/ of the nullspace of the original matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19067,"byte_end":19111,"line_start":420,"line_end":420,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19116,"byte_end":19119,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ The nullspace of a matrix M is the set of vectors N such that","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19124,"byte_end":19189,"line_start":422,"line_end":422,"column_start":5,"column_end":70}},{"value":"/ Mx = 0 for all x in N.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19194,"byte_end":19220,"line_start":423,"line_end":423,"column_start":5,"column_end":31}},{"value":"/ Therefore, if N is the nullspace matrix obtain from this function,","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19225,"byte_end":19295,"line_start":424,"line_end":424,"column_start":5,"column_end":75}},{"value":"/ we have that M * N^T = 0.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19300,"byte_end":19329,"line_start":425,"line_end":425,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19334,"byte_end":19337,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19342,"byte_end":19355,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19360,"byte_end":19363,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19368,"byte_end":19375,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19380,"byte_end":19419,"line_start":430,"line_end":430,"column_start":5,"column_end":44}},{"value":"/ let matrix = SparseBinMat::new(","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19424,"byte_end":19459,"line_start":431,"line_end":431,"column_start":5,"column_end":40}},{"value":"/     6,","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19464,"byte_end":19474,"line_start":432,"line_end":432,"column_start":5,"column_end":15}},{"value":"/     vec![vec![0, 1, 3, 5], vec![2, 3, 4], vec![2, 5], vec![0, 1, 3]],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19479,"byte_end":19552,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ );","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19557,"byte_end":19563,"line_start":434,"line_end":434,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19568,"byte_end":19571,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let expected = SparseBinMat::new(6, vec![vec![0, 3, 4,], vec![0, 1]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19576,"byte_end":19650,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ let nullspace = matrix.nullspace();","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19655,"byte_end":19694,"line_start":437,"line_end":437,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19699,"byte_end":19702,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(nullspace, expected);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19707,"byte_end":19743,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(&matrix * &nullspace.transposed(), SparseBinMat::zeros(4, 2));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19748,"byte_end":19825,"line_start":440,"line_end":440,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19830,"byte_end":19837,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20611,"byte_end":20633,"line_start":464,"line_end":464,"column_start":12,"column_end":34},"name":"horizontal_concat_with","qualname":"<SparseBinMat>::horizontal_concat_with","value":"pub fn horizontal_concat_with(&Self, &SparseBinMat) -> SparseBinMat","parent":null,"children":[],"decl_id":null,"docs":" Returns the horizontal concatenation of two matrices.","sig":null,"attributes":[{"value":"/ Returns the horizontal concatenation of two matrices.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19911,"byte_end":19968,"line_start":446,"line_end":446,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19973,"byte_end":19976,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ If the matrix have different number of rows, the smallest","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":19981,"byte_end":20042,"line_start":448,"line_end":448,"column_start":5,"column_end":66}},{"value":"/ one is padded with empty rows.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20047,"byte_end":20081,"line_start":449,"line_end":449,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20086,"byte_end":20089,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20094,"byte_end":20107,"line_start":451,"line_end":451,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20112,"byte_end":20115,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20120,"byte_end":20127,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20132,"byte_end":20171,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/ let left_matrix = SparseBinMat::new(3, vec![vec![0, 1], vec![1, 2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20176,"byte_end":20249,"line_start":455,"line_end":455,"column_start":5,"column_end":78}},{"value":"/ let right_matrix = SparseBinMat::new(4, vec![vec![1, 2, 3], vec![0, 1], vec![2, 3]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20254,"byte_end":20343,"line_start":456,"line_end":456,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20348,"byte_end":20351,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let concatened = left_matrix.horizontal_concat_with(&right_matrix);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20356,"byte_end":20427,"line_start":458,"line_end":458,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20432,"byte_end":20435,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let expected = SparseBinMat::new(7, vec![vec![0, 1, 4, 5, 6], vec![1, 2, 3, 4], vec![5, 6]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20440,"byte_end":20537,"line_start":460,"line_end":460,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20542,"byte_end":20545,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(concatened, expected);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20550,"byte_end":20587,"line_start":462,"line_end":462,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20592,"byte_end":20599,"line_start":463,"line_end":463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21387,"byte_end":21407,"line_start":485,"line_end":485,"column_start":12,"column_end":32},"name":"vertical_concat_with","qualname":"<SparseBinMat>::vertical_concat_with","value":"pub fn vertical_concat_with(&Self, &SparseBinMat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vertical concatenation of two matrices.","sig":null,"attributes":[{"value":"/ Returns the vertical concatenation of two matrices.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20733,"byte_end":20788,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20793,"byte_end":20796,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ If the matrix have different number of columns, the smallest","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20801,"byte_end":20865,"line_start":470,"line_end":470,"column_start":5,"column_end":69}},{"value":"/ one is padded with empty columns.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20870,"byte_end":20907,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20912,"byte_end":20915,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20920,"byte_end":20933,"line_start":473,"line_end":473,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20938,"byte_end":20941,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20946,"byte_end":20953,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":20958,"byte_end":20997,"line_start":476,"line_end":476,"column_start":5,"column_end":44}},{"value":"/ let left_matrix = SparseBinMat::new(3, vec![vec![0, 1], vec![1, 2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21002,"byte_end":21075,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/ let right_matrix = SparseBinMat::identity(3);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21080,"byte_end":21129,"line_start":478,"line_end":478,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21134,"byte_end":21137,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ let concatened = left_matrix.vertical_concat_with(&right_matrix);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21142,"byte_end":21211,"line_start":480,"line_end":480,"column_start":5,"column_end":74}},{"value":"/ let expected = SparseBinMat::new(3, vec![vec![0, 1], vec![1, 2], vec![0], vec![1], vec![2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21216,"byte_end":21313,"line_start":481,"line_end":481,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21318,"byte_end":21321,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(concatened, expected);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21326,"byte_end":21363,"line_start":483,"line_end":483,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21368,"byte_end":21375,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":22154,"byte_end":22169,"line_start":506,"line_end":506,"column_start":12,"column_end":27},"name":"dot_with_vector","qualname":"<SparseBinMat>::dot_with_vector","value":"pub fn dot_with_vector<T>(&Self, &SparseBinVecBase<T>)\n-> Result<SparseBinVec, MatVecIncompatibleDimensions> where\nT: std::ops::Deref<Target = [usize]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the dot product between a matrix and a vector or an error\n if the number of columns in the matrix is not equal to the length of\n the vector.","sig":null,"attributes":[{"value":"/ Returns the dot product between a matrix and a vector or an error","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21497,"byte_end":21566,"line_start":489,"line_end":489,"column_start":5,"column_end":74}},{"value":"/ if the number of columns in the matrix is not equal to the length of","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21571,"byte_end":21643,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ the vector.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21648,"byte_end":21663,"line_start":491,"line_end":491,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21668,"byte_end":21671,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Use the Mul (*) operator for a version that panics instead of","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21676,"byte_end":21741,"line_start":493,"line_end":493,"column_start":5,"column_end":70}},{"value":"/ returning a `Result`.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21746,"byte_end":21771,"line_start":494,"line_end":494,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21776,"byte_end":21779,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21784,"byte_end":21797,"line_start":496,"line_end":496,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21802,"byte_end":21805,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21810,"byte_end":21817,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::{SparseBinMat, SparseBinVec};","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21822,"byte_end":21877,"line_start":499,"line_end":499,"column_start":5,"column_end":60}},{"value":"/ let matrix = SparseBinMat::new(3, vec![vec![0, 1], vec![1, 2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21882,"byte_end":21950,"line_start":500,"line_end":500,"column_start":5,"column_end":73}},{"value":"/ let vector = SparseBinVec::new(3, vec![0, 1]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":21955,"byte_end":22005,"line_start":501,"line_end":501,"column_start":5,"column_end":55}},{"value":"/ let result = SparseBinVec::new(2, vec![1]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":22010,"byte_end":22057,"line_start":502,"line_end":502,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":22062,"byte_end":22065,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.dot_with_vector(&vector), Ok(result));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":22070,"byte_end":22130,"line_start":504,"line_end":504,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":22135,"byte_end":22142,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23552,"byte_end":23567,"line_start":547,"line_end":547,"column_start":12,"column_end":27},"name":"dot_with_matrix","qualname":"<SparseBinMat>::dot_with_matrix","value":"pub fn dot_with_matrix(&Self, &Self)\n-> Result<SparseBinMat, MatMatIncompatibleDimensions>","parent":null,"children":[],"decl_id":null,"docs":" Returns the dot product between two matrices or an error\n if the number of columns in the first matrix is not equal\n to the number of rows in the second matrix.","sig":null,"attributes":[{"value":"/ Returns the dot product between two matrices or an error","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":22845,"byte_end":22905,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ if the number of columns in the first matrix is not equal","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":22910,"byte_end":22971,"line_start":531,"line_end":531,"column_start":5,"column_end":66}},{"value":"/ to the number of rows in the second matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":22976,"byte_end":23023,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23028,"byte_end":23031,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ Use the Mul (*) operator for a version that panics instead of","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23036,"byte_end":23101,"line_start":534,"line_end":534,"column_start":5,"column_end":70}},{"value":"/ returning a `Result`.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23106,"byte_end":23131,"line_start":535,"line_end":535,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23136,"byte_end":23139,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23144,"byte_end":23157,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23162,"byte_end":23165,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23170,"byte_end":23177,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23182,"byte_end":23221,"line_start":540,"line_end":540,"column_start":5,"column_end":44}},{"value":"/ let matrix = SparseBinMat::new(3, vec![vec![0, 1], vec![1, 2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23226,"byte_end":23294,"line_start":541,"line_end":541,"column_start":5,"column_end":73}},{"value":"/ let other_matrix = SparseBinMat::new(4, vec![vec![1], vec![2], vec![3]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23299,"byte_end":23376,"line_start":542,"line_end":542,"column_start":5,"column_end":82}},{"value":"/ let result = SparseBinMat::new(4, vec![vec![1, 2], vec![2, 3]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23381,"byte_end":23449,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23454,"byte_end":23457,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.dot_with_matrix(&other_matrix), Ok(result));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23462,"byte_end":23528,"line_start":545,"line_end":545,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":23533,"byte_end":23540,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24928,"byte_end":24944,"line_start":586,"line_end":586,"column_start":12,"column_end":28},"name":"bitwise_xor_with","qualname":"<SparseBinMat>::bitwise_xor_with","value":"pub fn bitwise_xor_with(&Self, &Self)\n-> Result<Self, MatMatIncompatibleDimensions>","parent":null,"children":[],"decl_id":null,"docs":" Returns the bitwise xor sum of two matrices or an error\n if the matrices have different dimensions.","sig":null,"attributes":[{"value":"/ Returns the bitwise xor sum of two matrices or an error","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24275,"byte_end":24334,"line_start":570,"line_end":570,"column_start":5,"column_end":64}},{"value":"/ if the matrices have different dimensions.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24339,"byte_end":24385,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24390,"byte_end":24393,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Use the Add (+) operator for a version that panics instead","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24398,"byte_end":24460,"line_start":573,"line_end":573,"column_start":5,"column_end":67}},{"value":"/ of returning a `Result`.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24465,"byte_end":24493,"line_start":574,"line_end":574,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24498,"byte_end":24501,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24506,"byte_end":24519,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24524,"byte_end":24527,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24532,"byte_end":24539,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::{SparseBinMat, SparseBinVec};","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24544,"byte_end":24599,"line_start":579,"line_end":579,"column_start":5,"column_end":60}},{"value":"/ let matrix = SparseBinMat::new(3, vec![vec![0, 1], vec![1, 2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24604,"byte_end":24672,"line_start":580,"line_end":580,"column_start":5,"column_end":73}},{"value":"/ let other_matrix = SparseBinMat::new(3, vec![vec![0, 1, 2], vec![0, 1, 2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24677,"byte_end":24757,"line_start":581,"line_end":581,"column_start":5,"column_end":85}},{"value":"/ let result = SparseBinMat::new(3, vec![vec![2], vec![0]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24762,"byte_end":24824,"line_start":582,"line_end":582,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24829,"byte_end":24832,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.bitwise_xor_with(&other_matrix), Ok(result));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24837,"byte_end":24904,"line_start":584,"line_end":584,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":24909,"byte_end":24916,"line_start":585,"line_end":585,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26181,"byte_end":26195,"line_start":623,"line_end":623,"column_start":12,"column_end":26},"name":"keep_only_rows","qualname":"<SparseBinMat>::keep_only_rows","value":"pub fn keep_only_rows(&Self, &[usize]) -> Result<Self, InvalidPositions>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new matrix keeping only the given rows or an error\n if rows are out of bound, unsorted or not unique.","sig":null,"attributes":[{"value":"/ Returns a new matrix keeping only the given rows or an error","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25498,"byte_end":25562,"line_start":601,"line_end":601,"column_start":5,"column_end":69}},{"value":"/ if rows are out of bound, unsorted or not unique.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25567,"byte_end":25620,"line_start":602,"line_end":602,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25625,"byte_end":25628,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25633,"byte_end":25646,"line_start":604,"line_end":604,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25651,"byte_end":25654,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25659,"byte_end":25666,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25671,"byte_end":25708,"line_start":607,"line_end":607,"column_start":5,"column_end":42}},{"value":"/ let matrix = SparseBinMat::new(5, vec![","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25713,"byte_end":25756,"line_start":608,"line_end":608,"column_start":5,"column_end":48}},{"value":"/     vec![0, 1, 2],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25761,"byte_end":25783,"line_start":609,"line_end":609,"column_start":5,"column_end":27}},{"value":"/     vec![2, 3, 4],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25788,"byte_end":25810,"line_start":610,"line_end":610,"column_start":5,"column_end":27}},{"value":"/     vec![0, 2, 4],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25815,"byte_end":25837,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"/     vec![1, 3],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25842,"byte_end":25861,"line_start":612,"line_end":612,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25866,"byte_end":25873,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25878,"byte_end":25881,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ let truncated = SparseBinMat::new(5, vec![","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25886,"byte_end":25932,"line_start":615,"line_end":615,"column_start":5,"column_end":51}},{"value":"/     vec![0, 1, 2],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25937,"byte_end":25959,"line_start":616,"line_end":616,"column_start":5,"column_end":27}},{"value":"/     vec![0, 2, 4],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25964,"byte_end":25986,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ ]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":25991,"byte_end":25998,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26003,"byte_end":26006,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.keep_only_rows(&[0, 2]), Ok(truncated));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26011,"byte_end":26073,"line_start":620,"line_end":620,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(matrix.keep_only_rows(&[0, 2, 3]).unwrap().number_of_rows(), 3);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26078,"byte_end":26157,"line_start":621,"line_end":621,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26162,"byte_end":26169,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27280,"byte_end":27292,"line_start":656,"line_end":656,"column_start":12,"column_end":24},"name":"without_rows","qualname":"<SparseBinMat>::without_rows","value":"pub fn without_rows(&Self, &[usize]) -> Result<Self, InvalidPositions>","parent":null,"children":[],"decl_id":null,"docs":" Returns a truncated matrix where the given rows are removed or an error\n if rows are out of bound or unsorted.","sig":null,"attributes":[{"value":"/ Returns a truncated matrix where the given rows are removed or an error","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26603,"byte_end":26678,"line_start":634,"line_end":634,"column_start":5,"column_end":80}},{"value":"/ if rows are out of bound or unsorted.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26683,"byte_end":26724,"line_start":635,"line_end":635,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26729,"byte_end":26732,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26737,"byte_end":26750,"line_start":637,"line_end":637,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26755,"byte_end":26758,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26763,"byte_end":26770,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26775,"byte_end":26814,"line_start":640,"line_end":640,"column_start":5,"column_end":44}},{"value":"/ let matrix = SparseBinMat::new(5, vec![","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26819,"byte_end":26862,"line_start":641,"line_end":641,"column_start":5,"column_end":48}},{"value":"/     vec![0, 1, 2],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26867,"byte_end":26889,"line_start":642,"line_end":642,"column_start":5,"column_end":27}},{"value":"/     vec![2, 3, 4],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26894,"byte_end":26916,"line_start":643,"line_end":643,"column_start":5,"column_end":27}},{"value":"/     vec![0, 2, 4],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26921,"byte_end":26943,"line_start":644,"line_end":644,"column_start":5,"column_end":27}},{"value":"/     vec![1, 3],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26948,"byte_end":26967,"line_start":645,"line_end":645,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26972,"byte_end":26979,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26984,"byte_end":26987,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ let truncated = SparseBinMat::new(5, vec![","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":26992,"byte_end":27038,"line_start":648,"line_end":648,"column_start":5,"column_end":51}},{"value":"/     vec![2, 3, 4],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27043,"byte_end":27065,"line_start":649,"line_end":649,"column_start":5,"column_end":27}},{"value":"/     vec![1, 3],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27070,"byte_end":27089,"line_start":650,"line_end":650,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27094,"byte_end":27101,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27106,"byte_end":27109,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.without_rows(&[0, 2]), Ok(truncated));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27114,"byte_end":27174,"line_start":653,"line_end":653,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(matrix.without_rows(&[1, 2, 3]).unwrap().number_of_rows(), 1);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27179,"byte_end":27256,"line_start":654,"line_end":654,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27261,"byte_end":27268,"line_start":655,"line_end":655,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28335,"byte_end":28352,"line_start":689,"line_end":689,"column_start":12,"column_end":29},"name":"keep_only_columns","qualname":"<SparseBinMat>::keep_only_columns","value":"pub fn keep_only_columns(&Self, &[usize]) -> Result<Self, InvalidPositions>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new matrix keeping only the given columns or an error\n if columns are out of bound, unsorted or not unique.","sig":null,"attributes":[{"value":"/ Returns a new matrix keeping only the given columns or an error","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27529,"byte_end":27596,"line_start":663,"line_end":663,"column_start":5,"column_end":72}},{"value":"/ if columns are out of bound, unsorted or not unique.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27601,"byte_end":27657,"line_start":664,"line_end":664,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27662,"byte_end":27665,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ Columns are relabeled to the fit new number of columns.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27670,"byte_end":27729,"line_start":666,"line_end":666,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27734,"byte_end":27737,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27742,"byte_end":27755,"line_start":668,"line_end":668,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27760,"byte_end":27763,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27768,"byte_end":27775,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27780,"byte_end":27817,"line_start":671,"line_end":671,"column_start":5,"column_end":42}},{"value":"/ let matrix = SparseBinMat::new(5, vec![","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27822,"byte_end":27865,"line_start":672,"line_end":672,"column_start":5,"column_end":48}},{"value":"/     vec![0, 1, 2],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27870,"byte_end":27892,"line_start":673,"line_end":673,"column_start":5,"column_end":27}},{"value":"/     vec![2, 3, 4],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27897,"byte_end":27919,"line_start":674,"line_end":674,"column_start":5,"column_end":27}},{"value":"/     vec![0, 2, 4],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27924,"byte_end":27946,"line_start":675,"line_end":675,"column_start":5,"column_end":27}},{"value":"/     vec![1, 3],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27951,"byte_end":27970,"line_start":676,"line_end":676,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27975,"byte_end":27982,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27987,"byte_end":27990,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let truncated = SparseBinMat::new(3, vec![","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":27995,"byte_end":28041,"line_start":679,"line_end":679,"column_start":5,"column_end":51}},{"value":"/     vec![0, 1],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28046,"byte_end":28065,"line_start":680,"line_end":680,"column_start":5,"column_end":24}},{"value":"/     vec![2],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28070,"byte_end":28086,"line_start":681,"line_end":681,"column_start":5,"column_end":21}},{"value":"/     vec![0, 2],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28091,"byte_end":28110,"line_start":682,"line_end":682,"column_start":5,"column_end":24}},{"value":"/     vec![1],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28115,"byte_end":28131,"line_start":683,"line_end":683,"column_start":5,"column_end":21}},{"value":"/ ]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28136,"byte_end":28143,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28148,"byte_end":28151,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.keep_only_columns(&[0, 1, 4]), Ok(truncated));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28156,"byte_end":28224,"line_start":686,"line_end":686,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(matrix.keep_only_columns(&[1, 2]).unwrap().number_of_columns(), 2);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28229,"byte_end":28311,"line_start":687,"line_end":687,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28316,"byte_end":28323,"line_start":688,"line_end":688,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29699,"byte_end":29714,"line_start":732,"line_end":732,"column_start":12,"column_end":27},"name":"without_columns","qualname":"<SparseBinMat>::without_columns","value":"pub fn without_columns(&Self, &[usize]) -> Result<Self, InvalidPositions>","parent":null,"children":[],"decl_id":null,"docs":" Returns a truncated matrix where the given columns are removed or\n an error if columns are out of bound or unsorted.","sig":null,"attributes":[{"value":"/ Returns a truncated matrix where the given columns are removed or","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":28984,"byte_end":29053,"line_start":707,"line_end":707,"column_start":5,"column_end":74}},{"value":"/ an error if columns are out of bound or unsorted.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29058,"byte_end":29111,"line_start":708,"line_end":708,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29116,"byte_end":29119,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ Columns are relabeled to fit the new number of columns.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29124,"byte_end":29183,"line_start":710,"line_end":710,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29188,"byte_end":29191,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29196,"byte_end":29209,"line_start":712,"line_end":712,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29214,"byte_end":29217,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29222,"byte_end":29229,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29234,"byte_end":29273,"line_start":715,"line_end":715,"column_start":5,"column_end":44}},{"value":"/ let matrix = SparseBinMat::new(5, vec![","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29278,"byte_end":29321,"line_start":716,"line_end":716,"column_start":5,"column_end":48}},{"value":"/     vec![0, 1, 2],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29326,"byte_end":29348,"line_start":717,"line_end":717,"column_start":5,"column_end":27}},{"value":"/     vec![2, 3, 4],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29353,"byte_end":29375,"line_start":718,"line_end":718,"column_start":5,"column_end":27}},{"value":"/     vec![0, 2, 4],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29380,"byte_end":29402,"line_start":719,"line_end":719,"column_start":5,"column_end":27}},{"value":"/     vec![1, 3],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29407,"byte_end":29426,"line_start":720,"line_end":720,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29431,"byte_end":29438,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29443,"byte_end":29446,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let truncated = SparseBinMat::new(3, vec![","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29451,"byte_end":29497,"line_start":723,"line_end":723,"column_start":5,"column_end":51}},{"value":"/     vec![0],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29502,"byte_end":29518,"line_start":724,"line_end":724,"column_start":5,"column_end":21}},{"value":"/     vec![1, 2],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29523,"byte_end":29542,"line_start":725,"line_end":725,"column_start":5,"column_end":24}},{"value":"/     vec![2],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29547,"byte_end":29563,"line_start":726,"line_end":726,"column_start":5,"column_end":21}},{"value":"/     vec![0, 1],","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29568,"byte_end":29587,"line_start":727,"line_end":727,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29592,"byte_end":29599,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29604,"byte_end":29607,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(matrix.without_columns(&[0, 2]), Ok(truncated));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29612,"byte_end":29675,"line_start":730,"line_end":730,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29680,"byte_end":29687,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30490,"byte_end":30499,"line_start":753,"line_end":753,"column_start":12,"column_end":21},"name":"kron_with","qualname":"<SparseBinMat>::kron_with","value":"pub fn kron_with(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the Kronecker product of two matrices.","sig":null,"attributes":[{"value":"/ Returns the Kronecker product of two matrices.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":29961,"byte_end":30011,"line_start":739,"line_end":739,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30016,"byte_end":30019,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30024,"byte_end":30037,"line_start":741,"line_end":741,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30042,"byte_end":30045,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30050,"byte_end":30057,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinMat;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30062,"byte_end":30101,"line_start":744,"line_end":744,"column_start":5,"column_end":44}},{"value":"/ let left_matrix = SparseBinMat::new(2, vec![vec![1], vec![0]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30106,"byte_end":30173,"line_start":745,"line_end":745,"column_start":5,"column_end":72}},{"value":"/ let right_matrix = SparseBinMat::new(3, vec![vec![0, 1], vec![1, 2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30178,"byte_end":30252,"line_start":746,"line_end":746,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30257,"byte_end":30260,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ let product = left_matrix.kron_with(&right_matrix);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30265,"byte_end":30320,"line_start":748,"line_end":748,"column_start":5,"column_end":60}},{"value":"/ let expected = SparseBinMat::new(6, vec![vec![3, 4], vec![4, 5], vec![0, 1], vec![1, 2]]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30325,"byte_end":30419,"line_start":749,"line_end":749,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30424,"byte_end":30427,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(product, expected);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30432,"byte_end":30466,"line_start":751,"line_end":751,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30471,"byte_end":30478,"line_start":752,"line_end":752,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30634,"byte_end":30641,"line_start":758,"line_end":758,"column_start":12,"column_end":19},"name":"as_json","qualname":"<SparseBinMat>::as_json","value":"pub fn as_json(&Self) -> Result<String, serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a json string for the matrix.\n","sig":null,"attributes":[{"value":"/ Returns a json string for the matrix.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":30581,"byte_end":30622,"line_start":757,"line_end":757,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":647},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63827,"byte_end":63843,"line_start":20,"line_end":20,"column_start":12,"column_end":28},"name":"SparseBinVecBase","qualname":"::vector::SparseBinVecBase","value":"SparseBinVecBase {  }","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"decl_id":null,"docs":" A sparse binary vector.","sig":null,"attributes":[{"value":"/ A sparse binary vector.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63359,"byte_end":63386,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63387,"byte_end":63390,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ There are two main variants of a vector,","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63391,"byte_end":63435,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ the owned one, [`SparseBinVec`](crate::SparseBinVec), and the borrowed one,","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63436,"byte_end":63515,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ [`SparseBinSlice`](crate::SparseBinSlice).","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63516,"byte_end":63562,"line_start":15,"line_end":15,"column_start":1,"column_end":47}},{"value":"/ Most of the time, you want to create a owned version.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63563,"byte_end":63620,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ However, some iterators, such as those defined on [`SparseBinMat`](crate::SparseBinMat)","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63621,"byte_end":63712,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ returns the borrowed version.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63713,"byte_end":63746,"line_start":18,"line_end":18,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":434},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63898,"byte_end":63910,"line_start":25,"line_end":25,"column_start":10,"column_end":22},"name":"SparseBinVec","qualname":"::vector::SparseBinVec","value":"SparseBinVecBase<Vec<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":435},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":63952,"byte_end":63966,"line_start":26,"line_end":26,"column_start":10,"column_end":24},"name":"SparseBinSlice","qualname":"::vector::SparseBinSlice","value":"SparseBinVecBase<&'a [usize]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64330,"byte_end":64335,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"zeros","qualname":"<SparseBinVec>::zeros","value":"pub fn zeros(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a vector fill with zeros of the given length.","sig":null,"attributes":[{"value":"/ Creates a vector fill with zeros of the given length.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64029,"byte_end":64086,"line_start":29,"line_end":29,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64091,"byte_end":64094,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64099,"byte_end":64112,"line_start":31,"line_end":31,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64117,"byte_end":64120,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64125,"byte_end":64132,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64137,"byte_end":64176,"line_start":34,"line_end":34,"column_start":5,"column_end":44}},{"value":"/ let vector = SparseBinVec::zeros(3);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64181,"byte_end":64221,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64226,"byte_end":64229,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vector.len(), 3);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64234,"byte_end":64266,"line_start":37,"line_end":37,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(vector.weight(), 0);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64271,"byte_end":64306,"line_start":38,"line_end":38,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64311,"byte_end":64318,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64793,"byte_end":64798,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"empty","qualname":"<SparseBinVec>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty vector.","sig":null,"attributes":[{"value":"/ Creates an empty vector.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64452,"byte_end":64480,"line_start":47,"line_end":47,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64485,"byte_end":64488,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This allocate minimally, so it is a good placeholder.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64493,"byte_end":64550,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64555,"byte_end":64558,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64563,"byte_end":64576,"line_start":51,"line_end":51,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64581,"byte_end":64584,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64589,"byte_end":64596,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64601,"byte_end":64640,"line_start":54,"line_end":54,"column_start":5,"column_end":44}},{"value":"/ let vector = SparseBinVec::empty();","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64645,"byte_end":64684,"line_start":55,"line_end":55,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64689,"byte_end":64692,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vector.len(), 0);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64697,"byte_end":64729,"line_start":57,"line_end":57,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(vector.weight(), 0);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64734,"byte_end":64769,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64774,"byte_end":64781,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65227,"byte_end":65243,"line_start":78,"line_end":78,"column_start":12,"column_end":28},"name":"to_positions_vec","qualname":"<SparseBinVec>::to_positions_vec","value":"pub fn to_positions_vec(Self) -> Vec<usize>","parent":null,"children":[],"decl_id":null,"docs":" Converts the sparse binary vector to a `Vec` of\n the non trivial positions.","sig":null,"attributes":[{"value":"/ Converts the sparse binary vector to a `Vec` of","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64905,"byte_end":64956,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"/ the non trivial positions.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64961,"byte_end":64991,"line_start":68,"line_end":68,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64996,"byte_end":64999,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65004,"byte_end":65017,"line_start":70,"line_end":70,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65022,"byte_end":65025,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65030,"byte_end":65037,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65042,"byte_end":65081,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ let vector = SparseBinVec::new(3, vec![0, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65086,"byte_end":65136,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65141,"byte_end":65144,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vector.to_positions_vec(), vec![0, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65149,"byte_end":65203,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65208,"byte_end":65215,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65753,"byte_end":65756,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<SparseBinVecBase<T>>::new","value":"pub fn new(usize, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new vector with the given length and list of non trivial positions.","sig":null,"attributes":[{"value":"/ Creates a new vector with the given length and list of non trivial positions.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65357,"byte_end":65438,"line_start":84,"line_end":84,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65443,"byte_end":65446,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65451,"byte_end":65464,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65469,"byte_end":65472,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65477,"byte_end":65484,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65489,"byte_end":65528,"line_start":89,"line_end":89,"column_start":5,"column_end":44}},{"value":"/ use sparse_bin_mat::error::InvalidPositions;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65533,"byte_end":65581,"line_start":90,"line_end":90,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65586,"byte_end":65589,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let vector = SparseBinVec::new(5, vec![0, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65594,"byte_end":65644,"line_start":92,"line_end":92,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65649,"byte_end":65652,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vector.len(), 5);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65657,"byte_end":65689,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(vector.weight(), 2);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65694,"byte_end":65729,"line_start":95,"line_end":95,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65734,"byte_end":65741,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66751,"byte_end":66758,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SparseBinVecBase<T>>::try_new","value":"pub fn try_new(usize, T) -> Result<Self, InvalidPositions>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new vector with the given length and list of non trivial positions\n or returns as error if the positions are unsorted, greater or equal to length\n or contain duplicates.","sig":null,"attributes":[{"value":"/ Creates a new vector with the given length and list of non trivial positions","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65857,"byte_end":65937,"line_start":101,"line_end":101,"column_start":5,"column_end":85}},{"value":"/ or returns as error if the positions are unsorted, greater or equal to length","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65942,"byte_end":66023,"line_start":102,"line_end":102,"column_start":5,"column_end":86}},{"value":"/ or contain duplicates.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66028,"byte_end":66054,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66059,"byte_end":66062,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66067,"byte_end":66070,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66075,"byte_end":66088,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66093,"byte_end":66096,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66101,"byte_end":66108,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66113,"byte_end":66152,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/ use sparse_bin_mat::error::InvalidPositions;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66157,"byte_end":66205,"line_start":110,"line_end":110,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66210,"byte_end":66213,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let vector = SparseBinVec::try_new(5, vec![0, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66218,"byte_end":66272,"line_start":112,"line_end":112,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(vector, Ok(SparseBinVec::new(5, vec![0, 2])));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66277,"byte_end":66338,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66343,"byte_end":66346,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let vector = SparseBinVec::try_new(5, vec![2, 0]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66351,"byte_end":66405,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(vector, Err(InvalidPositions::Unsorted));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66410,"byte_end":66466,"line_start":116,"line_end":116,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66471,"byte_end":66474,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let vector = SparseBinVec::try_new(5, vec![0, 10]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66479,"byte_end":66534,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(vector, Err(InvalidPositions::OutOfBound));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66539,"byte_end":66597,"line_start":119,"line_end":119,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66602,"byte_end":66605,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let vector = SparseBinVec::try_new(5, vec![0, 0]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66610,"byte_end":66664,"line_start":121,"line_end":121,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(vector, Err(InvalidPositions::Duplicated));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66669,"byte_end":66727,"line_start":122,"line_end":122,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":66732,"byte_end":66739,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67166,"byte_end":67169,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"len","qualname":"<SparseBinVecBase<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length (number of elements) of the vector.\n","sig":null,"attributes":[{"value":"/ Returns the length (number of elements) of the vector.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67096,"byte_end":67154,"line_start":134,"line_end":134,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67293,"byte_end":67299,"line_start":140,"line_end":140,"column_start":12,"column_end":18},"name":"weight","qualname":"<SparseBinVecBase<T>>::weight","value":"pub fn weight(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements with value 1 in the vector.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements with value 1 in the vector.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67219,"byte_end":67281,"line_start":139,"line_end":139,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67420,"byte_end":67428,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SparseBinVecBase<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the length of the vector is 0.\n","sig":null,"attributes":[{"value":"/ Returns true if the length of the vector is 0.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67358,"byte_end":67408,"line_start":144,"line_end":144,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67549,"byte_end":67556,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<SparseBinVecBase<T>>::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all the element in the vector are 0.\n","sig":null,"attributes":[{"value":"/ Returns true if all the element in the vector are 0.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67481,"byte_end":67537,"line_start":149,"line_end":149,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68054,"byte_end":68057,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"get","qualname":"<SparseBinVecBase<T>>::get","value":"pub fn get(&Self, usize) -> Option<BinaryNumber>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value at the given position\n or None if the position is out of bound.","sig":null,"attributes":[{"value":"/ Returns the value at the given position","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67612,"byte_end":67655,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ or None if the position is out of bound.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67660,"byte_end":67704,"line_start":155,"line_end":155,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67709,"byte_end":67712,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67717,"byte_end":67730,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67735,"byte_end":67738,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67743,"byte_end":67750,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67755,"byte_end":67794,"line_start":160,"line_end":160,"column_start":5,"column_end":44}},{"value":"/ let vector = SparseBinVec::new(3, vec![0, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67799,"byte_end":67849,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67854,"byte_end":67857,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vector.get(0), Some(1));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67862,"byte_end":67901,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(vector.get(1), Some(0));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67906,"byte_end":67945,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(vector.get(2), Some(1));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67950,"byte_end":67989,"line_start":165,"line_end":165,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(vector.get(3), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":67994,"byte_end":68030,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68035,"byte_end":68042,"line_start":167,"line_end":167,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68827,"byte_end":68837,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"is_zero_at","qualname":"<SparseBinVecBase<T>>::is_zero_at","value":"pub fn is_zero_at(&Self, usize) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value at the given position is 0\n or None if the position is out of bound.","sig":null,"attributes":[{"value":"/ Returns true if the value at the given position is 0","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68333,"byte_end":68389,"line_start":180,"line_end":180,"column_start":5,"column_end":61}},{"value":"/ or None if the position is out of bound.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68394,"byte_end":68438,"line_start":181,"line_end":181,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68443,"byte_end":68446,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68451,"byte_end":68464,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68469,"byte_end":68472,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68477,"byte_end":68484,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68489,"byte_end":68528,"line_start":186,"line_end":186,"column_start":5,"column_end":44}},{"value":"/ let vector = SparseBinVec::new(3, vec![0, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68533,"byte_end":68583,"line_start":187,"line_end":187,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68588,"byte_end":68591,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vector.is_zero_at(0), Some(false));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68596,"byte_end":68646,"line_start":189,"line_end":189,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(vector.is_zero_at(1), Some(true));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68651,"byte_end":68700,"line_start":190,"line_end":190,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(vector.is_zero_at(2), Some(false));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68705,"byte_end":68755,"line_start":191,"line_end":191,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(vector.is_zero_at(3), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68760,"byte_end":68803,"line_start":192,"line_end":192,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68808,"byte_end":68815,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69431,"byte_end":69440,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"is_one_at","qualname":"<SparseBinVecBase<T>>::is_one_at","value":"pub fn is_one_at(&Self, usize) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value at the given position is 1\n or None if the position is out of bound.","sig":null,"attributes":[{"value":"/ Returns true if the value at the given position is 1","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":68942,"byte_end":68998,"line_start":198,"line_end":198,"column_start":5,"column_end":61}},{"value":"/ or None if the position is out of bound.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69003,"byte_end":69047,"line_start":199,"line_end":199,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69052,"byte_end":69055,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69060,"byte_end":69073,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69078,"byte_end":69081,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69086,"byte_end":69093,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69098,"byte_end":69137,"line_start":204,"line_end":204,"column_start":5,"column_end":44}},{"value":"/ let vector = SparseBinVec::new(3, vec![0, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69142,"byte_end":69192,"line_start":205,"line_end":205,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69197,"byte_end":69200,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vector.is_one_at(0), Some(true));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69205,"byte_end":69253,"line_start":207,"line_end":207,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(vector.is_one_at(1), Some(false));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69258,"byte_end":69307,"line_start":208,"line_end":208,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(vector.is_one_at(2), Some(true));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69312,"byte_end":69360,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(vector.is_one_at(3), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69365,"byte_end":69407,"line_start":210,"line_end":210,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69412,"byte_end":69419,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70009,"byte_end":70030,"line_start":230,"line_end":230,"column_start":12,"column_end":33},"name":"non_trivial_positions","qualname":"<SparseBinVecBase<T>>::non_trivial_positions","value":"pub fn non_trivial_positions<'a>(&'a Self) -> NonTrivialPositions","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all positions where the value is 1.","sig":null,"attributes":[{"value":"/ Returns an iterator over all positions where the value is 1.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69545,"byte_end":69609,"line_start":216,"line_end":216,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69614,"byte_end":69617,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69622,"byte_end":69635,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69640,"byte_end":69643,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69648,"byte_end":69655,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69660,"byte_end":69699,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/ let vector = SparseBinVec::new(5, vec![0, 1, 3]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69704,"byte_end":69757,"line_start":222,"line_end":222,"column_start":5,"column_end":58}},{"value":"/ let mut iter = vector.non_trivial_positions();","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69762,"byte_end":69812,"line_start":223,"line_end":223,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69817,"byte_end":69820,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.next(), Some(0));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69825,"byte_end":69862,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(iter.next(), Some(1));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69867,"byte_end":69904,"line_start":226,"line_end":226,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(iter.next(), Some(3));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69909,"byte_end":69946,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69951,"byte_end":69985,"line_start":228,"line_end":228,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":69990,"byte_end":69997,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70656,"byte_end":70662,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"concat","qualname":"<SparseBinVecBase<T>>::concat","value":"pub fn concat(&Self, &Self) -> SparseBinVec","parent":null,"children":[],"decl_id":null,"docs":" Returns the concatenation of two vectors.","sig":null,"attributes":[{"value":"/ Returns the concatenation of two vectors.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70187,"byte_end":70232,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70237,"byte_end":70240,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70245,"byte_end":70258,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70263,"byte_end":70266,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70271,"byte_end":70278,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70283,"byte_end":70322,"line_start":242,"line_end":242,"column_start":5,"column_end":44}},{"value":"/ let left_vector = SparseBinVec::new(3, vec![0, 1]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70327,"byte_end":70382,"line_start":243,"line_end":243,"column_start":5,"column_end":60}},{"value":"/ let right_vector = SparseBinVec::new(4, vec![2, 3]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70387,"byte_end":70443,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70448,"byte_end":70451,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let concatened = left_vector.concat(&right_vector);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70456,"byte_end":70511,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70516,"byte_end":70519,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let expected = SparseBinVec::new(7, vec![0, 1, 5, 6]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70524,"byte_end":70582,"line_start":248,"line_end":248,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70587,"byte_end":70590,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(concatened, expected);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70595,"byte_end":70632,"line_start":250,"line_end":250,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70637,"byte_end":70644,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71569,"byte_end":71588,"line_start":275,"line_end":275,"column_start":12,"column_end":31},"name":"keep_only_positions","qualname":"<SparseBinVecBase<T>>::keep_only_positions","value":"pub fn keep_only_positions(&Self, &[usize])\n-> Result<SparseBinVec, InvalidPositions>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new vector keeping only the given positions or an error\n if the positions are unsorted, out of bound or contain deplicate.","sig":null,"attributes":[{"value":"/ Returns a new vector keeping only the given positions or an error","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":70954,"byte_end":71023,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/ if the positions are unsorted, out of bound or contain deplicate.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71028,"byte_end":71097,"line_start":261,"line_end":261,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71102,"byte_end":71105,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Positions are relabeled to the fit new number of positions.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71110,"byte_end":71173,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71178,"byte_end":71181,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71186,"byte_end":71199,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71204,"byte_end":71207,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71212,"byte_end":71219,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71224,"byte_end":71261,"line_start":268,"line_end":268,"column_start":5,"column_end":42}},{"value":"/ let vector = SparseBinVec::new(5, vec![0, 2, 4]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71266,"byte_end":71319,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/ let truncated = SparseBinVec::new(3, vec![0, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71324,"byte_end":71377,"line_start":270,"line_end":270,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71382,"byte_end":71385,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vector.keep_only_positions(&[0, 1, 2]), Ok(truncated));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71390,"byte_end":71460,"line_start":272,"line_end":272,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(vector.keep_only_positions(&[1, 2]).map(|vec| vec.len()), Ok(2));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71465,"byte_end":71545,"line_start":273,"line_end":273,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":71550,"byte_end":71557,"line_start":274,"line_end":274,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72777,"byte_end":72794,"line_start":307,"line_end":307,"column_start":12,"column_end":29},"name":"without_positions","qualname":"<SparseBinVecBase<T>>::without_positions","value":"pub fn without_positions(&Self, &[usize])\n-> Result<SparseBinVec, InvalidPositions>","parent":null,"children":[],"decl_id":null,"docs":" Returns a truncated vector where the given positions are remove or an error\n if the positions are unsorted or out of bound.","sig":null,"attributes":[{"value":"/ Returns a truncated vector where the given positions are remove or an error","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72176,"byte_end":72255,"line_start":292,"line_end":292,"column_start":5,"column_end":84}},{"value":"/ if the positions are unsorted or out of bound.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72260,"byte_end":72310,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72315,"byte_end":72318,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Positions are relabeled to fit the new number of positions.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72323,"byte_end":72386,"line_start":295,"line_end":295,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72391,"byte_end":72394,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72399,"byte_end":72412,"line_start":297,"line_end":297,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72417,"byte_end":72420,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72425,"byte_end":72432,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72437,"byte_end":72476,"line_start":300,"line_end":300,"column_start":5,"column_end":44}},{"value":"/ let vector = SparseBinVec::new(5, vec![0, 2, 4]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72481,"byte_end":72534,"line_start":301,"line_end":301,"column_start":5,"column_end":58}},{"value":"/ let truncated = SparseBinVec::new(3, vec![0, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72539,"byte_end":72592,"line_start":302,"line_end":302,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72597,"byte_end":72600,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vector.without_positions(&[3, 4]), Ok(truncated));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72605,"byte_end":72670,"line_start":304,"line_end":304,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(vector.without_positions(&[1, 2]).map(|vec| vec.len()), Ok(3));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72675,"byte_end":72753,"line_start":305,"line_end":305,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":72758,"byte_end":72765,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73064,"byte_end":73071,"line_start":313,"line_end":313,"column_start":12,"column_end":19},"name":"as_view","qualname":"<SparseBinVecBase<T>>::as_view","value":"pub fn as_view(&Self) -> SparseBinSlice","parent":null,"children":[],"decl_id":null,"docs":" Returns a view over the vector.\n","sig":null,"attributes":[{"value":"/ Returns a view over the vector.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73017,"byte_end":73052,"line_start":312,"line_end":312,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73279,"byte_end":73287,"line_start":321,"line_end":321,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<SparseBinVecBase<T>>::as_slice","value":"pub fn as_slice(&Self) -> &[usize]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of the non trivial positions.\n","sig":null,"attributes":[{"value":"/ Returns a slice of the non trivial positions.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73218,"byte_end":73267,"line_start":320,"line_end":320,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73407,"byte_end":73415,"line_start":326,"line_end":326,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<SparseBinVecBase<T>>::to_owned","value":"pub fn to_owned(Self) -> SparseBinVec","parent":null,"children":[],"decl_id":null,"docs":" Returns an owned version of the vector.\n","sig":null,"attributes":[{"value":"/ Returns an owned version of the vector.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73352,"byte_end":73395,"line_start":325,"line_end":325,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74063,"byte_end":74071,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"dot_with","qualname":"<SparseBinVecBase<T>>::dot_with","value":"pub fn dot_with<S: Deref<Target = [usize]>>(&Self, &SparseBinVecBase<S>)\n-> Result<BinaryNumber, IncompatibleDimensions<usize, usize>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the dot product of two vectors or an\n error if the vectors have different length.","sig":null,"attributes":[{"value":"/ Returns the dot product of two vectors or an","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73567,"byte_end":73615,"line_start":333,"line_end":333,"column_start":5,"column_end":53}},{"value":"/ error if the vectors have different length.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73620,"byte_end":73667,"line_start":334,"line_end":334,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73672,"byte_end":73675,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73680,"byte_end":73693,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73698,"byte_end":73701,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73706,"byte_end":73713,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73718,"byte_end":73757,"line_start":339,"line_end":339,"column_start":5,"column_end":44}},{"value":"/ let first = SparseBinVec::new(4, vec![0, 1, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73762,"byte_end":73814,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ let second = SparseBinVec::new(4, vec![1, 2, 3]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73819,"byte_end":73872,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ let third = SparseBinVec::new(4, vec![0, 3]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73877,"byte_end":73926,"line_start":342,"line_end":342,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73931,"byte_end":73934,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first.dot_with(&second), Ok(0));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73939,"byte_end":73986,"line_start":344,"line_end":344,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(first.dot_with(&third), Ok((1)));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":73991,"byte_end":74039,"line_start":345,"line_end":345,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74044,"byte_end":74051,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":75063,"byte_end":75079,"line_start":373,"line_end":373,"column_start":12,"column_end":28},"name":"bitwise_xor_with","qualname":"<SparseBinVecBase<T>>::bitwise_xor_with","value":"pub fn bitwise_xor_with<S: Deref<Target =\n                        [usize]>>(&Self, &SparseBinVecBase<S>)\n-> Result<SparseBinVec, IncompatibleDimensions<usize, usize>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the bitwise xor of two vectors or an\n error if the vectors have different length.","sig":null,"attributes":[{"value":"/ Returns the bitwise xor of two vectors or an","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74502,"byte_end":74550,"line_start":358,"line_end":358,"column_start":5,"column_end":53}},{"value":"/ error if the vectors have different length.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74555,"byte_end":74602,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74607,"byte_end":74610,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Use the Add (+) operator if you want a version","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74615,"byte_end":74665,"line_start":361,"line_end":361,"column_start":5,"column_end":55}},{"value":"/ that panics instead or returning an error.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74670,"byte_end":74716,"line_start":362,"line_end":362,"column_start":5,"column_end":51}},{"value":"/ # Example","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74721,"byte_end":74734,"line_start":363,"line_end":363,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74739,"byte_end":74742,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74747,"byte_end":74754,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # use sparse_bin_mat::SparseBinVec;","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74759,"byte_end":74798,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/ let first = SparseBinVec::new(4, vec![0, 1, 2]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74803,"byte_end":74855,"line_start":367,"line_end":367,"column_start":5,"column_end":57}},{"value":"/ let second = SparseBinVec::new(4, vec![1, 2, 3]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74860,"byte_end":74913,"line_start":368,"line_end":368,"column_start":5,"column_end":58}},{"value":"/ let third = SparseBinVec::new(4, vec![0, 3]);","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74918,"byte_end":74967,"line_start":369,"line_end":369,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74972,"byte_end":74975,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(first.bitwise_xor_with(&second), Ok(third));","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":74980,"byte_end":75039,"line_start":371,"line_end":371,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":75044,"byte_end":75051,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":75801,"byte_end":75808,"line_start":393,"line_end":393,"column_start":12,"column_end":19},"name":"as_json","qualname":"<SparseBinVecBase<T>>::as_json","value":"pub fn as_json(&Self) -> Result<String, serde_json::Error> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":" Returns a json string for the vector.\n","sig":null,"attributes":[{"value":"/ Returns a json string for the vector.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":75748,"byte_end":75789,"line_start":392,"line_end":392,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":77084,"byte_end":77103,"line_start":442,"line_end":442,"column_start":12,"column_end":31},"name":"NonTrivialPositions","qualname":"::vector::NonTrivialPositions","value":"NonTrivialPositions {  }","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"decl_id":null,"docs":" An iterator over all non trivial positions of\n a sparse binary vector.\n","sig":null,"attributes":[{"value":"/ An iterator over all non trivial positions of","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":76971,"byte_end":77020,"line_start":439,"line_end":439,"column_start":1,"column_end":50}},{"value":"/ a sparse binary vector.","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":77021,"byte_end":77048,"line_start":440,"line_end":440,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":3195,"byte_end":3211,"line_start":22,"line_end":22,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":3592,"byte_end":3608,"line_start":32,"line_end":32,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":4381,"byte_end":4403,"line_start":60,"line_end":60,"column_start":14,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/gauss_jordan.rs","byte_start":40866,"byte_end":40877,"line_start":10,"line_end":10,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/non_trivial_elements.rs","byte_start":47816,"byte_end":47834,"line_start":13,"line_end":13,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/non_trivial_elements.rs","byte_start":48554,"byte_end":48572,"line_start":43,"line_end":43,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/rows.rs","byte_start":53829,"byte_end":53833,"line_start":14,"line_end":14,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/rows.rs","byte_start":54040,"byte_end":54044,"line_start":24,"line_end":24,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/rows.rs","byte_start":54353,"byte_end":54357,"line_start":38,"line_end":38,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/ser_de.rs","byte_start":58364,"byte_end":58376,"line_start":8,"line_end":8,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/ser_de.rs","byte_start":59097,"byte_end":59110,"line_start":35,"line_end":35,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/ser_de.rs","byte_start":60631,"byte_end":60643,"line_start":76,"line_end":76,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6603,"byte_end":6615,"line_start":45,"line_end":45,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":31994,"byte_end":32006,"line_start":803,"line_end":803,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/bitwise_operations.rs","byte_start":78540,"byte_end":78554,"line_start":12,"line_end":12,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/bitwise_operations.rs","byte_start":79688,"byte_end":79702,"line_start":47,"line_end":47,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/bitwise_operations.rs","byte_start":80637,"byte_end":80654,"line_start":85,"line_end":85,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64010,"byte_end":64022,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65331,"byte_end":65347,"line_start":83,"line_end":83,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":76831,"byte_end":76847,"line_start":433,"line_end":433,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":77187,"byte_end":77206,"line_start":447,"line_end":447,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/lib.rs","byte_start":2332,"byte_end":2337,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":3195,"byte_end":3211,"line_start":22,"line_end":22,"column_start":23,"column_end":39},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":505},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":3592,"byte_end":3608,"line_start":32,"line_end":32,"column_start":28,"column_end":44},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":505},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/error.rs","byte_start":4381,"byte_end":4403,"line_start":60,"line_end":60,"column_start":14,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/gauss_jordan.rs","byte_start":40866,"byte_end":40877,"line_start":10,"line_end":10,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/non_trivial_elements.rs","byte_start":47816,"byte_end":47834,"line_start":13,"line_end":13,"column_start":10,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/non_trivial_elements.rs","byte_start":48554,"byte_end":48572,"line_start":43,"line_end":43,"column_start":23,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":574},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/rows.rs","byte_start":53829,"byte_end":53833,"line_start":14,"line_end":14,"column_start":10,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/rows.rs","byte_start":54040,"byte_end":54044,"line_start":24,"line_end":24,"column_start":23,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/rows.rs","byte_start":54353,"byte_end":54357,"line_start":38,"line_end":38,"column_start":34,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":7097}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/ser_de.rs","byte_start":58364,"byte_end":58376,"line_start":8,"line_end":8,"column_start":20,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":629},"to":{"krate":22,"index":2074}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/ser_de.rs","byte_start":59097,"byte_end":59110,"line_start":35,"line_end":35,"column_start":28,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":264},"to":{"krate":22,"index":1619}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/ser_de.rs","byte_start":60631,"byte_end":60643,"line_start":76,"line_end":76,"column_start":32,"column_end":44},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":629},"to":{"krate":22,"index":1535}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":6603,"byte_end":6615,"line_start":45,"line_end":45,"column_start":6,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/matrix/mod.rs","byte_start":31994,"byte_end":32006,"line_start":803,"line_end":803,"column_start":28,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/bitwise_operations.rs","byte_start":78540,"byte_end":78554,"line_start":12,"line_end":12,"column_start":23,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":405},"to":{"krate":2,"index":7233}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/bitwise_operations.rs","byte_start":79688,"byte_end":79702,"line_start":47,"line_end":47,"column_start":10,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/bitwise_operations.rs","byte_start":80637,"byte_end":80654,"line_start":85,"line_end":85,"column_start":6,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":64010,"byte_end":64022,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":65331,"byte_end":65347,"line_start":83,"line_end":83,"column_start":34,"column_end":50},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":76831,"byte_end":76847,"line_start":433,"line_end":433,"column_start":51,"column_end":67},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":647},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/home/viet1004/.cargo/registry/src/github.com-1ecc6299db9ec823/sparse-bin-mat-0.5.2/src/vector/mod.rs","byte_start":77187,"byte_end":77206,"line_start":447,"line_end":447,"column_start":25,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":725},"to":{"krate":2,"index":7233}}]}